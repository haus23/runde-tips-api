security:
    encoders:
        # InMemory Users
        Symfony\Component\Security\Core\User\User: 'auto'

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # After having a real super admin in the db it's safe to remove this provider
        dev_admin:
            memory:
                users:
                    admin: { password: '$argon2id$v=19$m=65536,t=4,p=1$R09yQjBLQWFTMDJhZEIvZw$GntswzsZM7ed/reFKsTihp8XVRviBvhfPMcOJV5BWhk', roles: ['ROLE_ADMIN'] }

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: dev_admin

            # TODO: remove this auth provider after having a login form
            http_basic:
                realm: Secured Area

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/migration, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
